<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
		
     <context:component-scan base-package="com.heer.yjs.ds.modules" />

     <bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/mydb1?useUnicode=true&amp;characterEncoding=utf-8" />
        <property name="username" value="root" />
        <property name="password" value="12110603" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="100" />
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="50" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="10" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="10" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="5" />
    </bean>     

    <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.heer.yjs.ds.modules" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!-- 重新定义了SqlSessionFactoryBean 类中创建工厂类的方法  采用MybatisConfiguration类方法初始化Configuration -->
    <bean id="sqlSessionFactory" class="com.heer.yjs.ds.common.mybatis.HeerSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 设置基础的DataEntity路径和父类   -->
        <property name="typeAliasesPackage" value="com.heer.yjs.ds.modules"/>
        <property name="typeAliasesSuperType" value="com.heer.yjs.ds.common.persistence.DataEntity"/>
		<!--    自动扫描mapping.xml文件，**表示迭代查找 -->
        <property name="mapperLocations" value="classpath*:conf/mybatismapper/*Mapper.xml" />
        <!-- mybatis 配置文件 -->
        <property name="configLocation" value="classpath:conf/mybatis.xml"></property>
        <!-- 分页拦截器 -->
        <property name="plugins">
	     	 <bean class="com.github.pagehelper.PageHelper"/>
        </property>
    </bean> 

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>   
    
     <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource">  
            <ref bean="dataSource" />  
        </property>  
    </bean>   
    <!-- lob字段解析 -->
    <bean id="defaultLobHandler"   
          class="org.springframework.jdbc.support.lob.DefaultLobHandler"   
          lazy-init="true"/> 
</beans>
